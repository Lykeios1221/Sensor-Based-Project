const dialog=document.querySelector("dialog");function copyText(e){let o=document.createElement("textarea");dialog.appendChild(o),console.log(e),o.value=e,o.select(),o.focus(),document.execCommand("copy"),dialog.removeChild(o)}window.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("dialog button");let o=null;function t(e,t,n){o&&dialog.removeEventListener("close",o),dialog.close(),dialog.querySelector(".dialog-title").textContent=e,dialog.querySelector(".dialog-body").innerHTML=t,n&&(o=n,dialog.addEventListener("close",o)),dialog.showModal()}e.addEventListener("click",(()=>{dialog.close()}));const n=document.querySelector("#networkTable"),a=document.querySelector("#networkRow"),i=(document.querySelector("#ssid"),document.querySelector("#networkConfigForm"));let l=!1;const s=new WebSocket("ws://"+window.location.hostname+"/ws");s.addEventListener("open",(e=>{console.log("Websocket connection established.")})),s.addEventListener("message",(e=>{if(n.tBodies[0].innerHTML="",console.log(e.data),JSON.parse(e.data).forEach((e=>{!function(e,o){const t=a.content.cloneNode(!0).firstElementChild;t.querySelector("span").textContent=e;let i=0;switch(!0){case o>-30:i=4;break;case o>-67:i=3;break;case o>-70:i=2;break;case o>-80:i=1}for(let e=4-i;e>0;e--)t.querySelector(".wifi-"+(4-e+1)).style.opacity="30%";t.addEventListener("click",(o=>{this.ssid.value=e})),n.tBodies[0].append(t)}(e.ssid,e.strength)})),!n.tBodies[0].hasChildNodes()){const e=document.createElement("tr");e.style.height="150px",e.style.display="flex",e.style.alignItems="center";const o=document.createElement("th");o.textContent="No network found",e.append(o),n.tBodies[0].append(e)}return!1})),s.addEventListener("close",(e=>{console.log("Websocket connection disconnected."),alert("Connection is lost. Please refresh page and try again.")})),i.addEventListener("submit",(async e=>{if(e.preventDefault(),l)return void t("Info","Previous form is still processing. Please try again later");let o=new FormData(e.target),n={};o.forEach(((e,o)=>n[o]=e));let a=JSON.stringify(n);console.log("Submitting form data: "+a);try{t("Info","Form submitted. Validation may take up to max 1 minute."),l=!0;const e=await fetch("/submitForm",{method:"POST",mode:"cors",body:a,headers:{Accept:"application/json","Content-Type":"application/json"}}),o=await e.text();console.log(o);t(o?"Info":"Error",o?`Configuration is saved and web server will be closed. Token for login:<div class=tokenContainer><div class=token><div>${o}</div></div><button onclick="copyText('${o}')">Copy</button></div>It will only be displayed once upon config, please save it somewhere.`:"Invalid configuration. Please check again.",(()=>{o&&(window.location.href="about:home")}))}catch(e){alert("Error: "+e),console.error("Error: ",e)}finally{l=!1}}))}));